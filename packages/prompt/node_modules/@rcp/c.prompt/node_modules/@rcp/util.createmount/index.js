"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * @file index.ts
 * @author imcuttle
 *
 */
var ReactDOM = require("react-dom");
/**
 * @public
 * @param {IMountOptions<P>} opts
 * @param {Node} [opts.mountNode = document.body] - mountNode fallback in `open` function
 * @param {any} [opts.attributes] - attributes fallback in `open` function
 * @param {ReactElement<P>} [opts.element] - element fallback in `open` function
 * @return {IMountCenter}
 */
function createMountCenter(opts) {
    if (opts === void 0) { opts = {}; }
    var centerOpts = Object.assign({
        mountNode: document.body
    }, opts);
    var container = null;
    function getContainer(attrs, mNode) {
        if (attrs === void 0) { attrs = centerOpts.attributes; }
        if (mNode === void 0) { mNode = centerOpts.mountNode; }
        if (!container) {
            container = document.createElement('div');
            mNode.appendChild(container);
        }
        return Object.assign(container, attrs);
    }
    return {
        close: function () {
            var dom = getContainer();
            container = null;
            ReactDOM.unmountComponentAtNode(dom);
            dom.parentNode && dom.parentNode.removeChild(dom);
        },
        open: function (_a) {
            var _b = _a === void 0 ? {} : _a, _c = _b.element, element = _c === void 0 ? centerOpts.element : _c, _d = _b.mountNode, mountNode = _d === void 0 ? centerOpts.mountNode : _d, _e = _b.attributes, attributes = _e === void 0 ? centerOpts.attributes : _e;
            var dom = getContainer(attributes, mountNode);
            ReactDOM.render(element, dom);
            return dom;
        }
    };
}
exports.default = createMountCenter;
//# sourceMappingURL=index.js.map